# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET      /                                    controllers.Application.index
GET      /about                               controllers.Application.about
GET      /contact                             controllers.Application.contact

POST     /authenticate                        controllers.Application.authenticate
GET      /logout                              controllers.Application.logout
GET      /me                                  controllers.Account.index
GET      /signup                              controllers.Account.signup
POST     /users/create                        controllers.Account.createNewUser
POST     /users/update                        controllers.Account.update
GET      /users/:userId/profile               controllers.File.serveUserProfilePicture(userId: String )


# Chat routes available only for testing
# GET     /chat                       controllers.Chat.index
# GET     /chat/:roomId               controllers.Chat.room(roomId:Long)
# POST    /chat/create                controllers.Chat.create
GET      /chat/establish/:roomId              controllers.Chat.establish(roomId:String)
GET      /chat/log/:roomId                    controllers.Chat.prevMessages(roomId:String)

GET      /wall                                controllers.Wall.index
GET      /tree                                controllers.Wall.tree
GET      /wall/:wallId                        controllers.Wall.stage(wallId:String)
POST     /wall/create                         controllers.Wall.create
GET      /wall/sync/:wallId                   controllers.Wall.sync(wallId:String)
GET      /wall/comet/:wallId/:timestamp       controllers.Wall.listen(wallId:String, timestamp:Long)
POST     /wall/comet/:wallId                  controllers.Wall.speak(wallId:String)
POST     /wall/view/:wallId                   controllers.Wall.setView(wallId:String)
GET      /wall/search/:wallId/:keyword                        controllers.Wall.search(wallId:String, keyword:String)


POST     /wall/file/:wallId                   controllers.Wall.uploadFile(wallId:String)
GET      /wall/file/:wallId                   controllers.Wall.infoFile(wallId:String)
PUT      /wall/file/:wallId                   controllers.Wall.replaceFile(wallId:String)
DELETE   /wall/file/:wallId                   controllers.Wall.deleteFile(wallId:String)

GET      /group                               controllers.Group.index
GET      /group/:groupId                      controllers.Group.show(groupId:String)
POST     /group/create                        controllers.Group.create
POST     /group/:groupId/addUser              controllers.Group.addUser(groupId:String)
GET      /group/:groupId/removeUser/:userId   controllers.Group.removeUser(groupId:String, userId:String)
POST     /group/:groupId/createWall           controllers.Group.createWall(groupId:String)
POST     /group/:groupId/addWall              controllers.Group.addWallPost(groupId:String)
GET      /group/:groupId/addWall/:wallId      controllers.Group.addWall(groupId:String, wallId:String)
GET      /group/:groupId/removeWall/:wallId   controllers.Group.removeWall(groupId:String, wallId:String)

#POST    /file                 					controllers.File.upload
#GET     /file                 					controllers.File.info
#PUT     /file                 					controllers.File.replace
#DELETE  /file                 					controllers.File.delete

GET      /dropbox/authorize                   controllers.Dropbox.authorize
GET      /dropbox/callback                    controllers.Dropbox.callback
GET      /dropbox/account/info                controllers.Dropbox.account
GET      /dropbox/metadata                    controllers.Dropbox.metadata
GET      /dropbox/shares                      controllers.Dropbox.shares
GET      /dropbox/media                       controllers.Dropbox.media
GET      /dropbox/files                       controllers.Dropbox.downloadFiles
POST     /dropbox/files                       controllers.Dropbox.uploadFiles

# Map static resources from the /public folder to the /assets URL path
GET      /assets/*file                        controllers.Assets.at(path="/public", file)
GET      /upload/*file                        controllers.File.serve(file)
