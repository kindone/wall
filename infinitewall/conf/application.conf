# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="2wWm^1Qke=IKJ2fry1ushooZ^p30x;CscRKNpXGTEt^0qVl/b4>gD]7KY`u^u>wn"

# The application languages
# ~~~~~
application.langs="en,kr"


# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=Environment


# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# TODO: prepare postgresql db
production.db = {
	url="jdbc:postgres://localhost/infinitewall"
	user=infinitewall
	password=infinitewall
	driver=org.postgresql.Driver
}

development.db = {
	driver=org.h2.Driver
	url="jdbc:h2:activatedwall"
  user="infinitewall"
	password=""
	logStatements=true
}

#development.db = {
#  driver=org.h2.Driver
#  url="jdbc:h2:infinitewall"
#  user="infinitewall"
#  password=""
#  logStatements=true
#}

db.default=${development.db}


rooturl="choco.wafflestudio.com:9000"


# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled


# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=INFO

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG
logger.com.jolbox.bonecp=DEBUG


# Mailer
smtp.host="smtp.gmail.com"
smtp.port=465
smtp.ssl=yes
smtp.user="infinitewalldev@gmail.com"
smtp.password="infinitewall302"
smtp.from=${smtp.user}


# Dropbox
## Taekmin Kim
dropbox.app_key="4anp9cibsb7dehf"
dropbox.app_secret="yjfvgo016scy6l0"


## ElasticSearch Configuration
##############################
## define local mode or not
elasticsearch.local=false

## Coma-separated list of clients
elasticsearch.client="0.0.0.0:9300"
# ex : elasticsearch.client="192.168.0.46:9300,192.168.0.47:9300"

## Name of the index
elasticsearch.index.name="infinitewall"
## define package or class separate by commas for loading @IndexType and @IndexMapping information
elasticsearch.index.clazzs="indexing.*"

## Custom settings to apply when creating the index (optional)
#elasticsearch.infinitewall.settings="{ analysis: { analyzer: { default: { type: \"custom\", tokenizer: \"ngramTokenizer\", filter: [\"standard\", \"lowercase\", \"nGram\"], char_filter: [\"html_strip\"] } }, tokenizer: { ngramTokenizer: { type: \"edgeNGram\", min_gram: 2, max_gram: 15, side: \"front\" } } } }"
elasticsearch.infinitewall.settings="{ analysis: {   analyzer: {     \"default\": {        type: \"kr_analyzer\"      },      kr_analyzer: {        type: \"org.elasticsearch.index.analysis.KoreanAnalyzerProvider\",        tokenizer: \"kr_tokenizer\",        filter: [\"trim\",\"lowercase\", \"kr_filter\"]     }   } }}"


## show request & result json of search request in log (it will be logged using Logger.debug())
elasticsearch.index.show_request=true
